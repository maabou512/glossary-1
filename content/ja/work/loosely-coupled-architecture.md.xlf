<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="./en/loosely-coupled-architecture.md" source-language="en" target-language="ja" datatype="x-text/x-markdown" okp:inputEncoding="UTF-8">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">Loosely coupled architecture is an architectural style
where the individual components of an application are built independently from one another
(the opposite paradigm of <x id="1"/>tightly coupled architectures<x id="2"/>).
Each component, sometimes referred to as a <x id="3"/>microservice<x id="4"/>, is built to perform a specific function
in a way that can be used by any number of other services.
This pattern is generally slower to implement than tightly coupled architecture
but has a number of benefits, particularly as applications scale.</source>
<target xml:lang="ja" state="translated">疎結合アーキテクチャはアーキテクチャ スタイルです
アプリケーションの個々のコンポーネントが互いに独立して構築される場所
(<x id="1"/>密結合アーキテクチャ<x id="2"/>の反対のパラダイム)。
<x id="3"/>マイクロサービス<x id="4"/>と呼ばれることもある各コンポーネントは、特定の機能を実行するように構築されています
他の多くのサービスで使用できる方法で。
このパターンは一般に、密結合アーキテクチャよりも実装に時間がかかります
しかし、特にアプリケーションの規模が拡大するにつれて、多くの利点があります。</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en">Loosely coupled applications allow teams to develop features, deploy, and scale independently,
which allows organizations to iterate quickly on individual components.
Application development is faster and teams can be structured around their competency,
focusing on their specific application.</source>
<target xml:lang="ja" state="translated">疎結合アプリケーションにより、チームは機能の開発、展開、スケーリングを個別に行うことができます。
これにより、組織は個々のコンポーネントをすばやく反復できます。
アプリケーション開発はより迅速で、チームは能力に基づいて構成できます。
特定のアプリケーションに焦点を当てています。</target>
</trans-unit>
</body>
</file>
</xliff>
