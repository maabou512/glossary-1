<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="./en/container.md" source-language="en" target-language="ja" datatype="x-text/x-markdown" okp:inputEncoding="UTF-8">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">What it is</source>
<target xml:lang="ja" state="translated">それは何ですか</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en">A container is a running process with resource and capability constraints managed by a computer’s operating system.
The files available to the container process are packaged as a container image.
Containers run adjacent to each other on the same machine,
but typically the operating system prevents the separate container processes from interacting with each other.</source>
<target xml:lang="ja" state="translated">コンテナとは、コンピュータのオペレーティング システムによって管理される、リソースと機能の制約を持つ実行中のプロセスです。
コンテナー プロセスで使用できるファイルは、コンテナー イメージとしてパッケージ化されます。
コンテナは同じマシン上で互いに隣接して実行されます。
ただし、通常、オペレーティング システムは、個別のコンテナー プロセスが相互に対話するのを防ぎます。</target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en">Problem it addresses</source>
<target xml:lang="ja" state="translated">対処する問題</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">Before containers were available, separate machines were necessary to run applications.
Each machine would require its own operating system, which takes CPU, memory, and disk space,
all for an individual application to function.
Additionally, the maintenance, upgrade, and startup of an operating system is another significant source of toil.</source>
<target xml:lang="ja" state="translated">コンテナが利用可能になる前は、アプリケーションを実行するために別のマシンが必要でした。
各マシンには独自のオペレーティング システムが必要で、これには CPU、メモリ、およびディスク容量が必要です。
すべては個々のアプリケーションが機能するためです。
さらに、オペレーティング システムの保守、アップグレード、および起動は、もう 1 つの重要な労力の源です。</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">How it helps</source>
<target xml:lang="ja" state="translated">どのように役立つか</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en">Containers share the same operating system and its machine resources,
spreading the operating system’s resource overhead and creating efficient use of the physical machine.
This capability is only possible because containers are typically limited from being able to interact with each other.
This allows many more applications to be run on the same physical machine.</source>
<target xml:lang="ja" state="translated">コンテナは同じオペレーティング システムとそのマシン リソースを共有します。
オペレーティング システムのリソース オーバーヘッドを分散させ、物理マシンを効率的に使用します。
この機能が可能になるのは、通常、コンテナーが相互に対話することが制限されているためです。
これにより、同じ物理マシン上でさらに多くのアプリケーションを実行できます。</target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en">There are limitations, however.
Since containers share the same operating system, processes can be considered less secure than alternatives.
Containers also require limits on the shared resources.
To guarantee resources, administrators must constrain and limit memory and CPU usage so that other applications do not perform poorly.</source>
<target xml:lang="ja" state="translated">ただし、制限があります。
コンテナーは同じオペレーティング システムを共有するため、プロセスは他の方法よりも安全性が低いと見なすことができます。
コンテナーには、共有リソースの制限も必要です。
リソースを保証するために、管理者は、他のアプリケーションのパフォーマンスが低下しないように、メモリと CPU の使用を制限および制限する必要があります。</target>
</trans-unit>
</body>
</file>
</xliff>
