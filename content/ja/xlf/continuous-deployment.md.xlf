<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="./en/continuous-deployment.md" source-language="en" target-language="ja" datatype="x-text/x-markdown" okp:inputEncoding="UTF-8">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">What it is</source>
<target xml:lang="ja">What it is</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en">Continuous deployment, often abbreviated as CD, goes a step further than <x id="1"/>continuous delivery<x id="2"/>
by deploying finished software directly to production.
Continuous deployment (CD) goes hand in hand with <x id="3"/>continuous integration<x id="4"/> (CI),
and is often referred to as CI/CD.
The CI process tests if the changes to a given application are valid,
and the CD process automatically deploys the code changes through an organization's environments from test to production.</source>
<target xml:lang="ja">Continuous deployment, often abbreviated as CD, goes a step further than <x id="1"/>continuous delivery<x id="2"/>
by deploying finished software directly to production.
Continuous deployment (CD) goes hand in hand with <x id="3"/>continuous integration<x id="4"/> (CI),
and is often referred to as CI/CD.
The CI process tests if the changes to a given application are valid,
and the CD process automatically deploys the code changes through an organization's environments from test to production.</target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en">Problem it addresses</source>
<target xml:lang="ja">Problem it addresses</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">Releasing new software versions can be a labor-intensive and error-prone process.
It is also often something that organizations will only want to do infrequently to avoid production incidents
and reduce the number of time engineers need to be available outside of regular business hours.
Traditional software deployment models leave organizations in a vicious cycle
where the process of releasing software fails to meet organizational needs around both stability and feature velocity.</source>
<target xml:lang="ja">Releasing new software versions can be a labor-intensive and error-prone process.
It is also often something that organizations will only want to do infrequently to avoid production incidents
and reduce the number of time engineers need to be available outside of regular business hours.
Traditional software deployment models leave organizations in a vicious cycle
where the process of releasing software fails to meet organizational needs around both stability and feature velocity.</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">How it helps</source>
<target xml:lang="ja">How it helps</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en">By automating the release cycle and forcing organizations to release to production more frequently,
CD does what CI did for development teams for operations teams.
Specifically, it forces operations teams to automate the painful and error-prone portions of production deployments, reducing overall risk.
It also makes organizations better at accepting and adapting to production changes, which leads to higher stability.</source>
<target xml:lang="ja">By automating the release cycle and forcing organizations to release to production more frequently,
CD does what CI did for development teams for operations teams.
Specifically, it forces operations teams to automate the painful and error-prone portions of production deployments, reducing overall risk.
It also makes organizations better at accepting and adapting to production changes, which leads to higher stability.</target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en">Related terms</source>
<target xml:lang="ja">Related terms</target>
</trans-unit>
<trans-unit id="tu8" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Continuous Integration<x id="2"/></source>
<target xml:lang="ja"><x id="1"/>Continuous Integration<x id="2"/></target>
</trans-unit>
<trans-unit id="tu9" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Continuous Delivery<x id="2"/></source>
<target xml:lang="ja"><x id="1"/>Continuous Delivery<x id="2"/></target>
</trans-unit>
</body>
</file>
</xliff>
