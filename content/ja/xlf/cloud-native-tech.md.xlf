<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="./en/cloud-native-tech.md" source-language="en" target-language="ja" datatype="x-text/x-markdown" okp:inputEncoding="UTF-8">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">What it is</source>
<target xml:lang="ja">What it is</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en">Cloud native technologies, also referred to as the cloud native stack,
are the technologies used to build <x id="1"/>cloud native applications<x id="2"/>.
These technologies enable organizations to build and run scalable applications in modern and dynamic environments
such as public, private, and hybrid clouds,
while leveraging <x id="3"/>cloud computing<x id="4"/> benefits to their fullest.
They are designed from the ground up to exploit the capabilities of cloud computing and containers, service meshes, microservices,
and immutable infrastructure exemplify this approach.</source>
<target xml:lang="ja">Cloud native technologies, also referred to as the cloud native stack,
are the technologies used to build <x id="1"/>cloud native applications<x id="2"/>.
These technologies enable organizations to build and run scalable applications in modern and dynamic environments
such as public, private, and hybrid clouds,
while leveraging <x id="3"/>cloud computing<x id="4"/> benefits to their fullest.
They are designed from the ground up to exploit the capabilities of cloud computing and containers, service meshes, microservices,
and immutable infrastructure exemplify this approach.</target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en">Problem it addresses</source>
<target xml:lang="ja">Problem it addresses</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">The cloud native stack has many different technology categories, addressing a variety of challenges.
If you have a look at the <x id="1"/>CNCF Cloud Native Landscape<x id="2"/>,
you'll see how many different areas it touches upon.
But on a high level, they address one main set of challenges:
the downsides of traditional IT operating models.
Challenges include difficulties creating scalable, fault-tolerant, self-healing applications,
as well as inefficient resource utilization, among others.</source>
<target xml:lang="ja">The cloud native stack has many different technology categories, addressing a variety of challenges.
If you have a look at the <x id="1"/>CNCF Cloud Native Landscape<x id="2"/>,
you'll see how many different areas it touches upon.
But on a high level, they address one main set of challenges:
the downsides of traditional IT operating models.
Challenges include difficulties creating scalable, fault-tolerant, self-healing applications,
as well as inefficient resource utilization, among others.</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">How it helps</source>
<target xml:lang="ja">How it helps</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en">While each technology addresses a very specific problem,
as a group, cloud native technologies enable loosely coupled systems that are resilient, manageable, and observable.
Combined with robust automation, they allow engineers to make high-impact changes frequently and predictably with minimal toil.
Desirable traits of cloud native systems are easier to achieve with the cloud native stack.</source>
<target xml:lang="ja">While each technology addresses a very specific problem,
as a group, cloud native technologies enable loosely coupled systems that are resilient, manageable, and observable.
Combined with robust automation, they allow engineers to make high-impact changes frequently and predictably with minimal toil.
Desirable traits of cloud native systems are easier to achieve with the cloud native stack.</target>
</trans-unit>
</body>
</file>
</xliff>
