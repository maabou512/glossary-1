<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="./en/site-reliability-engineering.md" source-language="en" target-language="ja" datatype="x-text/x-markdown" okp:inputEncoding="UTF-8">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">What it is</source>
<target xml:lang="ja">What it is</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en">Site Reliability Engineering or SRE is a discipline that combines operations and software engineering.
The latter is applied to infrastructure and operations problems, specifically.
Meaning, instead of building product features, Site Reliability Engineers build systems to run applications.
There are similarities with <x id="1"/>DevOps<x id="2"/>, but while DevOps focuses on getting code to production,
SRE ensures that code running in production works properly.</source>
<target xml:lang="ja">Site Reliability Engineering or SRE is a discipline that combines operations and software engineering.
The latter is applied to infrastructure and operations problems, specifically.
Meaning, instead of building product features, Site Reliability Engineers build systems to run applications.
There are similarities with <x id="1"/>DevOps<x id="2"/>, but while DevOps focuses on getting code to production,
SRE ensures that code running in production works properly.</target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en">Problem it addresses</source>
<target xml:lang="ja">Problem it addresses</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">Ensuring applications run <x id="1"/>reliably<x id="2"/> requires multiple capabilities,
from performance monitoring, alerting, <x id="3"/>debugging<x id="4"/> to troubleshooting.
Without these, system operators can only react to problems vs. proactively working towards avoiding them
— downtime only becomes a matter of time.</source>
<target xml:lang="ja">Ensuring applications run <x id="1"/>reliably<x id="2"/> requires multiple capabilities,
from performance monitoring, alerting, <x id="3"/>debugging<x id="4"/> to troubleshooting.
Without these, system operators can only react to problems vs. proactively working towards avoiding them
— downtime only becomes a matter of time.</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">How it helps</source>
<target xml:lang="ja">How it helps</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en">An SRE approach minimizes the cost, time, and effort of the software development process
by continuously improving the underlying system.
The system continuously measures and monitors the infrastructure and application components.
When something goes wrong, the system points Site Reliability Engineers to when, where, and how to fix it.
This approach helps create highly <x id="1"/>scalable<x id="2"/> and reliable software systems by automating operational tasks.</source>
<target xml:lang="ja">An SRE approach minimizes the cost, time, and effort of the software development process
by continuously improving the underlying system.
The system continuously measures and monitors the infrastructure and application components.
When something goes wrong, the system points Site Reliability Engineers to when, where, and how to fix it.
This approach helps create highly <x id="1"/>scalable<x id="2"/> and reliable software systems by automating operational tasks.</target>
</trans-unit>
</body>
</file>
</xliff>
